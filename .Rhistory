PrMen.hi <- s.men[3,]
# extract and name rows
PrWomen.lo <- s.women[1,]
PrWomen.med <- s.women[2,]
PrWomen.hi <- s.women[3,]
#pack it all into a df to then plot
df <- tibble(age.range, PrMen.lo, PrMen.med, PrMen.hi, PrWomen.lo, PrWomen.med, PrWomen.hi)
#Plotting
line.men.v.women <- ggplot(df, aes(x=age.range)) +
geom_line(aes(y=PrMen.med)) +
geom_ribbon(aes(ymin=PrMen.lo, ymax=PrMen.hi), fill = "red", alpha=.2) +
geom_line(aes(y=PrWomen.med)) +
geom_ribbon(aes(ymin=PrWomen.lo, ymax=PrWomen.hi), fill = "blue", alpha=.2) +
xlab("Age") +
ylab("Probability of Having Advance Directive")
gender <- line.men.v.women + labs(title = "Probability of Advance Directive by Age and Gender")
ggsave("figures/ad_men_women_line.pdf", gender)
# Focal Variable is TERMINAL  ----
x.base.terminal <- c(1,                     # intercept
0,                     # for women
mean(home$AGEATINT),   # mean age
mean(home$COGNFUNC),                     # mean cognitive impairment
0,                     # Unmaarried
1,                     # Non-Terminal Patients
mean(home$log_LOSHH),    # mean of log Length of Stay
0,                     # Not Readmitted
mean(home$TOTCDDX),    # Mean number of diagnoses
mean(home$TOTALRX),    # Mean number of medication
mean(home$TOTPROC),    # Mean number of Procedures
0)                     # Not-Enrolled in medicaid
#create matrix of first binary condition by the number of columns in the above specified range, eqaul to the length of ROWS
X.base.terminal <- matrix(x.base.terminal, nrow=length(x.base.terminal), ncol=length(age.range))
#insert the the same range in to the proper coefficient position, this will change if model changes and should be the same for both matrices
X.base.terminal[3,] <- age.range #replacing with different capability values
# Create the matrix baseline for the second binary condition, same positon as above but should be the opposite value, 0 or 1
x.base.notterm <- c(1,                     # intercept
0,                     # for women
mean(home$AGEATINT),   # mean age
mean(home$COGNFUNC),                     # mean cognitive impairment
0,                     # Unmaarried
0,                     # Non-Terminal Patients
mean(home$log_LOSHH),    # mean of log Length of Stay
0,                     # Not Readmitted
mean(home$TOTCDDX),    # Mean number of diagnoses
mean(home$TOTALRX),    # Mean number of medication
mean(home$TOTPROC),    # Mean number of Procedures
0)                     # Not-Enrolled in medicaid
X.base.notterm <- matrix(x.base.notterm, nrow=length(x.base.notterm), ncol=length(age.range))
X.base.notterm[3,] <- age.range #replacing with different wage values
#matrix multiplication by the simulated coefficients
s.terminal <- inv.logit(B.sim %*% X.base.terminal) #matrix of predicted probabilities
s.notterm <- inv.logit(B.sim %*% X.base.notterm) #matrix of predicted probabilities
#collapse to get quantiles
s.terminal<-apply(s.terminal, 2, quantile, c(0.025, 0.5, .975))
s.notterm<-apply(s.notterm, 2, quantile, c(0.025, 0.5, .975))
# extract the quantiles and name for plotting
PrTerminal.lo <- s.terminal[1,]
PrTerminal.med <- s.terminal[2,]
PrTerminal.hi <- s.terminal[3,]
# extract and name rows
PrNotTerminal.lo <- s.notterm[1,]
PrNotTerminal.med <- s.notterm[2,]
PrNotTerminal.hi <- s.notterm[3,]
#pack it all into a df to then plot
df <- tibble(age.range, PrTerminal.lo, PrTerminal.med, PrTerminal.hi, PrNotTerminal.lo, PrNotTerminal.med, PrNotTerminal.hi)
#Plotting
line.term.v.nonterm <- ggplot(df, aes(x=age.range)) +
geom_line(aes(y=PrTerminal.med)) +
geom_ribbon(aes(ymin=PrTerminal.lo, ymax=PrTerminal.hi), fill = "red", alpha=.2) +
geom_line(aes(y=PrNotTerminal.med)) +
geom_ribbon(aes(ymin=PrNotTerminal.lo, ymax=PrNotTerminal.hi), fill = "blue", alpha=.2) +
xlab("Age") +
ylab("Probability of Having Advance Directive") +
annotate("text", x=40, y=.4, label="Terminal") +
annotate("text", x=50, y=.15, label="Not-Terminal")
terminal <- line.term.v.nonterm + labs(title = "Probability of Advance Directive by Age and Prognosis")
ggsave("figures/ad_terminal_not_line.pdf", terminal)
# Focal Variable is MARRIED -----
x.base.married <- c(1,                     # intercept
0,                     # for wommen
mean(home$AGEATINT),   # mean age
mean(home$COGNFUNC),                     # mean cognitive impairment
1,                     # Unmaarried
0,                     # Non-Terminal Patients
mean(home$log_LOSHH),    # mean of log Length of Stay
0,                     # Not Readmitted
mean(home$TOTCDDX),    # Mean number of diagnoses
mean(home$TOTALRX),    # Mean number of medication
mean(home$TOTPROC),    # Mean number of Procedures
0)                     # Not-Enrolled in medicaid
#create matrix of first binary condition by the number of columns in the above specified range, eqaul to the length of ROWS
x.base.married <- matrix(x.base.married, nrow=length(x.base.married), ncol=length(age.range))
#insert the the same range in to the proper coefficient position, this will change if model changes and should be the same for both matrices
x.base.married[3,] <- age.range #replacing with different capability values
# Create the matrix baseline for the second binary condition, same positon as above but should be the opposite value, 0 or 1
x.base.notmarried <- c(1,                     # intercept
0,                     # for wommen
mean(home$AGEATINT),   # mean age
mean(home$COGNFUNC),                     # mean cognitive impairment
0,                     # Unmaarried
0,                     # Non-Terminal Patients
mean(home$log_LOSHH),    # mean of log Length of Stay
0,                     # Not Readmitted
mean(home$TOTCDDX),    # Mean number of diagnoses
mean(home$TOTALRX),    # Mean number of medication
mean(home$TOTPROC),    # Mean number of Procedures
0)                     # Not-Enrolled in medicaid
x.base.notmarried <- matrix(x.base.notmarried, nrow=length(x.base.notmarried), ncol=length(age.range))
x.base.notmarried[3,] <- age.range #replacing with different wage values
#matrix multiplication by the simulated coefficients
s.married <- inv.logit(B.sim %*% x.base.married) #matrix of predicted probabilities
s.notmarried <- inv.logit(B.sim %*% x.base.notmarried) #matrix of predicted probabilities
#collapse to get quantiles
s.married<-apply(s.married, 2, quantile, c(0.025, 0.5, .975))
s.notmarried<-apply(s.notmarried, 2, quantile, c(0.025, 0.5, .975))
# extract the quantiles and name for plotting
PrMarried.lo <- s.married[1,]
PrMarried.med <- s.married[2,]
PrMarried.hi <- s.married[3,]
# extract and name rows
PrNotMarried.lo <- s.notmarried[1,]
PrNotMarried.med <- s.notmarried[2,]
PrNotMarried.hi <- s.notmarried[3,]
#pack it all into a df to then plot
df <- tibble(age.range, PrMarried.lo, PrMarried.med, PrMarried.hi, PrNotMarried.lo, PrNotMarried.med, PrNotMarried.hi)
#Plotting
line.married.v.notmarried <- ggplot(df, aes(x=age.range)) +
geom_line(aes(y=PrMarried.med)) +
geom_ribbon(aes(ymin=PrMarried.lo, ymax=PrMarried.hi), fill = "red", alpha=.2) +
geom_line(aes(y=PrNotMarried.med)) +
geom_ribbon(aes(ymin=PrNotMarried.lo, ymax=PrNotMarried.hi), fill = "blue", alpha=.2) +
xlab("Age") +
ylab("Probability of Having Advance Directive") +
annotate("text", x=23, y=.25, label="Married") +
annotate("text", x=50, y=.15, label="Not-Married")
marstat <- line.married.v.notmarried + labs(title = "Probability of Advance Directive by Age and Marriage Status")
ggsave("figures/ad_married_not_married_line.pdf", marstat)
# Focal Variable is MEDICAIDENR -----
x.base.medicaid <- c(1,                     # intercept
0,                     # for wommen
mean(home$AGEATINT),   # mean age
mean(home$COGNFUNC),                     # mean cognitive impairment
0,                     # Unmaarried
0,                     # Non-Terminal Patients
mean(home$log_LOSHH),    # mean of log Length of Stay
0,                     # Not Readmitted
mean(home$TOTCDDX),    # Mean number of diagnoses
mean(home$TOTALRX),    # Mean number of medication
mean(home$TOTPROC),    # Mean number of Procedures
1)                     # Enrolled in medicaid
#create matrix of first binary condition by the number of columns in the above specified range, eqaul to the length of ROWS
x.base.medicaid <- matrix(x.base.medicaid, nrow=length(x.base.medicaid), ncol=length(age.range))
#insert the the same range in to the proper coefficient position, this will change if model changes and should be the same for both matrices
x.base.medicaid[3,] <- age.range #replacing with different capability values
# Create the matrix baseline for the second binary condition, same positon as above but should be the opposite value, 0 or 1
x.base.nomedicaid <- c(1,                     # intercept
0,                     # for wommen
mean(home$AGEATINT),   # mean age
mean(home$COGNFUNC),                     # mean cognitive impairment
0,                     # Unmaarried
0,                     # Non-Terminal Patients
mean(home$log_LOSHH),    # mean of log Length of Stay
0,                     # Not Readmitted
mean(home$TOTCDDX),    # Mean number of diagnoses
mean(home$TOTALRX),    # Mean number of medication
mean(home$TOTPROC),    # Mean number of Procedures
0)                     # Not-Enrolled in medicaid
x.base.nomedicaid <- matrix(x.base.nomedicaid, nrow=length(x.base.nomedicaid), ncol=length(age.range))
x.base.nomedicaid[3,] <- age.range #replacing with different wage values
#matrix multiplication by the simulated coefficients
s.medicaid <- inv.logit(B.sim %*% x.base.medicaid) #matrix of predicted probabilities
s.nomedicaid <- inv.logit(B.sim %*% x.base.nomedicaid) #matrix of predicted probabilities
#collapse to get quantiles
s.medicaid<-apply(s.medicaid, 2, quantile, c(0.025, 0.5, .975))
s.nomedicaid<-apply(s.nomedicaid, 2, quantile, c(0.025, 0.5, .975))
# extract the quantiles and name for plotting
PrMedicaid.lo <- s.medicaid[1,]
PrMedicaid.med <- s.medicaid[2,]
PrMedicaid.hi <- s.medicaid[3,]
# extract and name rows
PrNoMedicaid.lo <- s.nomedicaid[1,]
PrNoMedicaid.med <- s.nomedicaid[2,]
PrNoMedicaid.hi <- s.nomedicaid[3,]
#pack it all into a df to then plot
df <- tibble(age.range, PrMedicaid.lo, PrMedicaid.med, PrMedicaid.hi, PrNoMedicaid.lo, PrNoMedicaid.med, PrNoMedicaid.hi)
#Plotting
line.medicaid.v.nomedicaid <- ggplot(df, aes(x=age.range)) +
geom_line(aes(y=PrMedicaid.med)) +
geom_ribbon(aes(ymin=PrMedicaid.lo, ymax=PrMedicaid.hi), fill = "red", alpha=.2) +
geom_line(aes(y=PrNoMedicaid.med)) +
geom_ribbon(aes(ymin=PrNoMedicaid.lo, ymax=PrNoMedicaid.hi), fill = "blue", alpha=.2) +
xlab("Age") +
ylab("Probability of Having Advance Directive") +
annotate("text", x=23, y=.25, label="Not-Enrolled") +
annotate("text", x=60, y=.15, label="Enrolled")
medicaid <- line.medicaid.v.nomedicaid + labs(title = "Probability of Advance Directive by Age and Medicaid Status")
ggsave("figures/ad_medicaid_nomedicaid_line.pdf", medicaid)
all.g <- gridExtra::grid.arrange(gender, marstat, medicaid, terminal, ncol=2)
#pack it all into a df to then plot
df <- tibble(age.range, PrMen.lo, PrMen.med, PrMen.hi, PrWomen.lo, PrWomen.med, PrWomen.hi)
#Plotting
line.men.v.women <- ggplot(df, aes(x=age.range)) +
geom_line(aes(y=PrMen.med)) +
geom_ribbon(aes(ymin=PrMen.lo, ymax=PrMen.hi), fill = "red", alpha=.2) +
geom_line(aes(y=PrWomen.med)) +
geom_ribbon(aes(ymin=PrWomen.lo, ymax=PrWomen.hi), fill = "blue", alpha=.2) +
xlab("Age") +
ylab("Probability of Having Advance Directive") +
annotate("text", x=23, y=.25, label="Men") +
annotate("text", x=60, y=.15, label="Women")
gender <- line.men.v.women + labs(title = "Probability of Advance Directive by Age and Gender")
gender
all.g <- gridExtra::grid.arrange(gender, marstat, medicaid, terminal, ncol=2)
#Getting Coefficients to calculate by hand probabilities
intercept <- coef(unweighted.dir.logit)[1]
b_sex <- coef(unweighted.dir.logit)[2]
b_age <- coef(unweighted.dir.logit)[3]
b_cognitive <- coef(unweighted.dir.logit)[4]
b_married <- coef(unweighted.dir.logit)[5]
b_terminal <- coef(unweighted.dir.logit)[6]
b_length_stay <- coef(unweighted.dir.logit)[7]
b_readmit <- coef(unweighted.dir.logit)[8]
b_diagnoses <- coef(unweighted.dir.logit)[9]
b_meds <- coef(unweighted.dir.logit)[10]
b_procedures <- coef(unweighted.dir.logit)[11]
b_medicaid <- coef(unweighted.dir.logit)[12]
#for men, mean age, mean cognitive function, married, 6 moths or less prognosis, mean length of stay, readmitted, mean diagnoses, meds and procedures, on medicaid
logits.adir <- intercept + 1 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 1 * b_married +
1 * b_terminal + mean(home$LOSHH) * b_length_stay + 1 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 1 * b_medicaid
# the probability of having an advance directive is
logit2prob(logits.adir)
ggsave("figures/all_lines.pdf", all.g)
#for men, mean age, mean cognitive function, married, 6 moths or less prognosis, mean length of stay, readmitted, mean diagnoses, meds and procedures, on medicaid
logits.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
1 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 1 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
# the probability of having an advance directive is
logit2prob(logits.adir)
logits.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 1 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
# the probability of having an advance directive is
logit2prob(logits.adir)
logits.adir <- intercept + 1 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 1 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
# the probability of having an advance directive is
logit2prob(logits.adir)
logits.adir <- intercept + 1 * b_sex  + min(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 1 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
# the probability of having an advance directive is
logit2prob(logits.adir)
#for men, mean age, mean cognitive function, married, 6 moths or less prognosis, mean length of stay, readmitted, mean diagnoses, meds and procedures, on medicaid
logits.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
1 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
# the probability of having an advance directive is
logit2prob(logits.adir)
logits.adir <- intercept + 1 * b_sex  + min(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
# the probability of having an advance directive is
logit2prob(logits.adir)
#for men, mean age, mean cognitive function, married, 6 moths or less prognosis, mean length of stay, readmitted, mean diagnoses, meds and procedures, on medicaid
women.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
men.adir <- intercept + 1 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
# the probability of having an advance directive is
logit2prob(women.adir)
logit2prob(men.adir)
logLik(unweighted.dir.logit)
summary(unweighted.dir.logit)
# Simulating coefficients and plotting -----
logit2prob(coef(unweighted.dir.logit))
## odds ratios and 95% CI
exp(cbind(OR = coef(unweighted.dir.logit), confint(unweighted.dir.logit)))
mean(home$COGNFUNC)
#for men, mean age, mean cognitive function, married, 6 moths or less prognosis, mean length of stay, readmitted, mean diagnoses, meds and procedures, on medicaid
women.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
women.adir
# the probability of having an advance directive is
logit2prob(women.adir)
logit2prob(men.adir)
# model likelihood
K <- (unweighted.dir.logit$rank)-1
df <- length(unweighted.dir.logit$y)
ModelLLK <- logLik(unweighted.dir.logit)
cat("Model Log-Likelihood", ModelLLK, "\n")
NullLLK <- logLik(null.dir.logit)
cat("Null Log-Likelihood", NullLLK, "\n")
# By hand
LR.byhand <- -2*(NullLLK - ModelLLK)
cat("Likelihood Ratio", LR.byhand, "; Chi^2 (df=", K, ")=", 1-pchisq(LR.byhand, K), "\n")
# Likeihood ratio from the glm
LR <- unweighted.dir.logit$null.deviance - unweighted.dir.logit$deviance
cat("Likeihood Ratio", LR, "; Chi^2 (df=", K, ") = ", 1-pchisq(LR,K), "\n")
# AIC and BIC
cat("AIC", AIC(unweighted.dir.logit), "BIC", BIC(unweighted.dir.logit), "\n")
# Brier score
wa_predicted <- fitted(unweighted.dir.logit)
wa_actual <- as.numeric(unweighted.dir.logit$model$ANYADDIR)
wa_pred.simp <- fitted(null.dir.logit)
brier_predicted <- verification::brier(wa_actual,wa_predicted)
brier_null <- verification::brier(wa_actual,wa_pred.simp)
cat("Brier scores for our model", brier_predicted$bs, "vs null", brier_null$bs, "\n")
wa_pred<-wa_predicted*0.0
wa_pred[wa_predicted>=.5]<-1
tab<-table(wa_pred,wa_actual)
names(tab)<-c("Observed 0","Observed 1")
rownames(tab)<-c("Predicted 0","Observed 1")
tab1<-xtable::xtable(table(wa_pred,wa_actual),caption="Predicted at c=.5 or greater.")
names(tab1)<-c("Observed 0","Observed 1")
row.names(tab1)<-c("Predicted 0","Predicted 1")
tab1 #latex table
# ROC plot, base R (Ward and Ahlquist)
# - ROCR::prediction takes two arguments: fitted values and "labels" (observed values)
wa_predicted<-fitted(unweighted.dir.logit)
wa_actual<-as.vector(null.dir.logit$model$ANYADDIR)
wa_pred<-ROCR::prediction(wa_predicted, wa_actual)
# - ROCR::performance takes three arguments: the prediction obj (from ROCR::prediction,
#         truepositive rate and false positive rate (specified as options)
wa_perf<-ROCR::performance(wa_pred,"tpr","fpr")
pdf(file = "figures/anydirective_unweighted_ROC.pdf", width=5, height=5, onefile=TRUE)
par(las=1, bty="n")
plot(wa_perf,main="ROC plot for unweighted Any Directive Model", bty="n",lwd=1)
par(new=TRUE)
lines(wa_actual,wa_actual, lty="dashed")
dev.off()
terminal.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
1 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
notterminal.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
logit2prob(terminal.adir)
logit2prob(notterminal.adir)
# the probability of having an advance directive is
logit2prob(women.adir)
logit2prob(men.adir)
hist(home$AGEATINT)
terminal.adir <- intercept + 0 * b_sex  + 80 * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
1 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
notterminal.adir <- intercept + 0 * b_sex  + 80 * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
logit2prob(terminal.adir)
logit2prob(notterminal.adir)
terminal.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
1 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
notterminal.adir <- intercept + 0 * b_sex  + mean(home$AGEATINT) * b_age + mean(home$COGNFUNC) * b_cognitive + 0 * b_married +
0 * b_terminal + mean(home$log_LOSHH) * b_length_stay + 0 * b_readmit + mean(home$TOTCDDX) + mean(home$TOTALRX) * b_meds +
mean(home$TOTPROC) * b_procedures + 0 * b_medicaid
logit2prob(terminal.adir)
logit2prob(notterminal.adir)
# the probability of having an advance directive is
logit2prob(women.adir)
logit2prob(men.adir)
logit2prob(terminal.adir)
logit2prob(notterminal.adir)
pct_correct # 68% correctly predicted
# pct_correct
pred_array <- as.array(table(pdir, home$ANYADDIR), dim=c(2,2))
right <- sum(diag(pred_array))
# table of predicted directives by actual values, unweigthed
pdir <- as.integer(predict(unweighted.dir.logit)>.5)
table(pdir, home$ANYADDIR)
# pct_correct
pred_array <- as.array(table(pdir, home$ANYADDIR), dim=c(2,2))
right <- sum(diag(pred_array))
total <- sum(pred_array)
pct_correct <- right/total
pct_correct # 68% correctly predicted
# table of predicted directives by actual values, unweigthed
pdir <- as.integer(predict(unweighted.dir.logit)>.5)
table(pdir, home$ANYADDIR)
BIC(null.dir.logit)
save.image("/Volumes/timothyelder/Graduate/Maximum_Likelihood/assessment_final/final_workspace.RData")
library(zelig)
library(Zelig)
nhhcs <- haven::read_dta("/Volumes/timothyelder/Graduate/Maximum_Likelihood/assessment_final/ICPSR_28961/DS0002/28961-0002-data.dta")
nhhcs <- haven::read_dta("/Volumes/timothyelder/Graduate/Maximum_Likelihood/assessment_final/ICPSR_28961/DS0002/28961-0002-data.dta")
#Missing and non-response to NA
nhhcs[nhhcs == -1] <- NA #fill INAPPLICABLE/NOT ASCERTAINED with NA
nhhcs[nhhcs == -7] <- NA #fill Refused with NA
nhhcs[nhhcs == -8] <- NA #fill missing with NA
#Categorical Variables to Display Lables
nhhcs$MARSTAT <- labelled::to_factor(nhhcs$MARSTAT) #marriage status
nhhcs$DISCHARG <- labelled::to_factor(nhhcs$DISCHARG) #reason for discharge
nhhcs$WHRDISCH <- labelled::to_factor(nhhcs$WHRDISCH) #where go after discharge
# Dummies originally coded 1=YES, 2=NO, recode 2 == 0
nhhcs$READMSS <- plyr::mapvalues(nhhcs$READMSS, from = c(2), to = c(0))
nhhcs$DECEASED <- plyr::mapvalues(nhhcs$DECEASED, from = c(2), to = c(0))
nhhcs$SEX <- plyr::mapvalues(nhhcs$SEX, from = c(2), to = c(0))
nhhcs$ANYADDIR <- plyr::mapvalues(nhhcs$ANYADDIR, from = c(2), to = c(0))
nhhcs$LIVINGWL <- plyr::mapvalues(nhhcs$LIVINGWL, from = c(2), to = c(0))
nhhcs$DNR <- plyr::mapvalues(nhhcs$DNR, from = c(2), to = c(0))
nhhcs$NOHOSP <- plyr::mapvalues(nhhcs$NOHOSP, from = c(2), to = c(0))
nhhcs$FEEDRES <- plyr::mapvalues(nhhcs$FEEDRES, from = c(2), to = c(0))
nhhcs$MEDRES <- plyr::mapvalues(nhhcs$MEDRES, from = c(2), to = c(0))
nhhcs$COMFORT <- plyr::mapvalues(nhhcs$COMFORT, from = c(2), to = c(0))
nhhcs$POWER <- plyr::mapvalues(nhhcs$POWER, from = c(2), to = c(0))
nhhcs$ORGANDON <- plyr::mapvalues(nhhcs$ORGANDON, from = c(2), to = c(0))
nhhcs$NOADVANC <- plyr::mapvalues(nhhcs$NOADVANC, from = c(2), to = c(0))
nhhcs$MCAIDENR <- plyr::mapvalues(nhhcs$MCAIDENR, from = c(2), to = c(0))
nhhcs$MCAIDENR <- plyr::mapvalues(nhhcs$MCAIDENR, from = c(3), to = c(1))
nhhcs$HISPAN <- plyr::mapvalues(nhhcs$HISPAN, from = c(2), to = c(0))
nhhcs$RACEBLCK <- plyr::mapvalues(nhhcs$RACEBLCK, from = c(2), to = c(0))
nhhcs$RACEWHT <- plyr::mapvalues(nhhcs$RACEWHT, from = c(2), to = c(0))
# New Variables
nhhcs$DIRECTIVES <- rowSums(nhhcs[,33:43] == 1)-1 #New variable for number of directives patient has
nhhcs$MARRIED <- ifelse(nhhcs$MARSTAT =='MARRIED', 1, 0) #new dummy for whether patient is currently married
nhhcs$TERMINAL <- ifelse(nhhcs$LIFEXPEC==1, 1, 0) # new terminal for whether the patient is terminal
nhhcs$log_LOSHH <- log1p(nhhcs$LOSHH) #logarithmic transformation of the LOSHH variable to acconut for skewness
#subsetting for current home health patients
home <- nhhcs %>%
subset(PHTYPE == 1) %>%
select(CASEID, PATNUM, TOTCDDX, CDDX1, TOTALRX, TOTPROC, DIRECTIVES, LOSHH, READMSS, SEX, AGEATINT, HISPAN, RACEBLCK, RACEWHT, MARSTAT, MCAIDENR, ANYADDIR, LIVINGWL, DNR, COGNFUNC, MARRIED, TERMINAL, log_LOSHH) %>%
na.omit()
library(tidyverse)
#Missing and non-response to NA
nhhcs[nhhcs == -1] <- NA #fill INAPPLICABLE/NOT ASCERTAINED with NA
nhhcs[nhhcs == -7] <- NA #fill Refused with NA
nhhcs[nhhcs == -8] <- NA #fill missing with NA
#Categorical Variables to Display Lables
nhhcs$MARSTAT <- labelled::to_factor(nhhcs$MARSTAT) #marriage status
nhhcs$DISCHARG <- labelled::to_factor(nhhcs$DISCHARG) #reason for discharge
nhhcs$WHRDISCH <- labelled::to_factor(nhhcs$WHRDISCH) #where go after discharge
# Dummies originally coded 1=YES, 2=NO, recode 2 == 0
nhhcs$READMSS <- plyr::mapvalues(nhhcs$READMSS, from = c(2), to = c(0))
nhhcs$DECEASED <- plyr::mapvalues(nhhcs$DECEASED, from = c(2), to = c(0))
nhhcs$SEX <- plyr::mapvalues(nhhcs$SEX, from = c(2), to = c(0))
nhhcs$ANYADDIR <- plyr::mapvalues(nhhcs$ANYADDIR, from = c(2), to = c(0))
nhhcs$LIVINGWL <- plyr::mapvalues(nhhcs$LIVINGWL, from = c(2), to = c(0))
nhhcs$DNR <- plyr::mapvalues(nhhcs$DNR, from = c(2), to = c(0))
nhhcs$NOHOSP <- plyr::mapvalues(nhhcs$NOHOSP, from = c(2), to = c(0))
nhhcs$FEEDRES <- plyr::mapvalues(nhhcs$FEEDRES, from = c(2), to = c(0))
nhhcs$MEDRES <- plyr::mapvalues(nhhcs$MEDRES, from = c(2), to = c(0))
nhhcs$COMFORT <- plyr::mapvalues(nhhcs$COMFORT, from = c(2), to = c(0))
nhhcs$POWER <- plyr::mapvalues(nhhcs$POWER, from = c(2), to = c(0))
nhhcs$ORGANDON <- plyr::mapvalues(nhhcs$ORGANDON, from = c(2), to = c(0))
nhhcs$NOADVANC <- plyr::mapvalues(nhhcs$NOADVANC, from = c(2), to = c(0))
nhhcs$MCAIDENR <- plyr::mapvalues(nhhcs$MCAIDENR, from = c(2), to = c(0))
nhhcs$MCAIDENR <- plyr::mapvalues(nhhcs$MCAIDENR, from = c(3), to = c(1))
nhhcs$HISPAN <- plyr::mapvalues(nhhcs$HISPAN, from = c(2), to = c(0))
nhhcs$RACEBLCK <- plyr::mapvalues(nhhcs$RACEBLCK, from = c(2), to = c(0))
nhhcs$RACEWHT <- plyr::mapvalues(nhhcs$RACEWHT, from = c(2), to = c(0))
# New Variables
nhhcs$DIRECTIVES <- rowSums(nhhcs[,33:43] == 1)-1 #New variable for number of directives patient has
nhhcs$MARRIED <- ifelse(nhhcs$MARSTAT =='MARRIED', 1, 0) #new dummy for whether patient is currently married
nhhcs$TERMINAL <- ifelse(nhhcs$LIFEXPEC==1, 1, 0) # new terminal for whether the patient is terminal
nhhcs$log_LOSHH <- log1p(nhhcs$LOSHH) #logarithmic transformation of the LOSHH variable to acconut for skewness
#subsetting for current home health patients
home <- nhhcs %>%
subset(PHTYPE == 1) %>%
select(CASEID, PATNUM, TOTCDDX, CDDX1, TOTALRX, TOTPROC, DIRECTIVES, LOSHH, READMSS, SEX, AGEATINT, HISPAN, RACEBLCK, RACEWHT, MARSTAT, MCAIDENR, ANYADDIR, LIVINGWL, DNR, COGNFUNC, MARRIED, TERMINAL, log_LOSHH) %>%
na.omit()
z.out1 <- zelig(vote ~ age + race, model = "logit", data = turnout,
cite = FALSE)
z.out1 <- zelig(ANYADDIR ~ SEX + AGEATINT + COGNFUNC + MARRIED + TERMINAL +
LOSHH + READMSS + TOTCDDX + TOTALRX + TOTPROC + MCAIDENR, model = "logit", data = home,
cite = FALSE)
summary(z.out1, odds_ratios = TRUE)
summary(z.out1)
# Focal Variable is SEX -----
x.base.men <- c(1,                     # intercept
1,                     # for men
mean(home$AGEATINT),   # mean age
mean(home$COGNFUNC),                     # mean cognitive impairment
0,                     # Unmaarried
0,                     # Non-Terminal Patients
mean(home$log_LOSHH),    # mean of log Length of Stay
0,                     # Not Readmitted
mean(home$TOTCDDX),    # Mean number of diagnoses
mean(home$TOTALRX),    # Mean number of medication
mean(home$TOTPROC),    # Mean number of Procedures
0)                     # Not-Enrolled in medicaid
x.base.men
x.high <- setx(z.out1, TERMINAL = 1)
x.low <- setx(z.out1, TERMINAL = 0)
s.out2 <- sim(z.out1, x = x.high, x1 = x.low)
summary(s.out2)
plot(s.out2)
summary(s.out2)
x.high <- setx(z.out1, MARRIED = 1)
x.low <- setx(z.out1, MARRIED = 0)
s.out2 <- sim(z.out1, x = x.high, x1 = x.low)
summary(s.out2)
plot(s.out2)
x.high <- setx(z.out1, READMSS = 1)
x.low <- setx(z.out1, READMSS = 0)
s.out2 <- sim(z.out1, x = x.high, x1 = x.low)
summary(s.out2)
plot(s.out2)
x.high <- setx(z.out1, SEX = 1)
x.low <- setx(z.out1, SEX = 0)
s.out2 <- sim(z.out1, x = x.high, x1 = x.low)
summary(s.out2)
plot(s.out2)
dir(s.out)
dirs(s.out)
names(s.out)
names(s.out2)
s.out2$graph
